name: nymea-app
summary: Control app for nymea
description: | 
  The nymea daemon is a plugin based IoT (Internet of Things) server. 
  The server works like a translator for devices, things and services 
  and allows them to interact. With the powerful rule engine you are 
  able to connect any device available in the system and create individual 
  scenes and behaviors for your environment.

grade: stable
base: core18
confinement: strict
adopt-info: nymea-app

architectures:
- build-on: amd64
- build-on: arm64
- build-on: armhf

environment:
  USE_qt5: 1

apps:
  nymea-app:
    command-chain: [bin/desktop-launch]
    command: usr/bin/nymea-app
    environment:
      QT_IM_MODULE: qtvirtualkeyboard
      __EGL_VENDOR_LIBRARY_DIRS: $SNAP/etc/glvnd/egl_vendor.d:$SNAP/usr/share/glvnd/egl_vendor.d
    plugs:
    - avahi-observe
    - bluez
    - network
    - opengl
    - x11

#  nymea-app-webgl:
#    command: env PATH=$PATH:$SNAP/bin qt5-launch nymea-app -platform webgl:port=8080
#    daemon: simple
#    restart-condition: always

parts:
  desktop-qt5:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: qt
    plugin: make
    make-parameters: ["FLAVOR=qt5"]
    build-packages:
      - build-essential
      - libqt5charts5-dev
      - libqt5websockets5-dev
      - qtbase5-dev
      - dpkg-dev
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - libqt5charts5
      - libqt5gui5
      - libgdk-pixbuf2.0-0
      - libqt5svg5 # for loading icon themes which are svg
      - try: [appmenu-qt5] # not available on core18
      - locales-all
      - xdg-user-dirs
      - fcitx-frontend-qt5

  # Adding the whole guh project containig libguh and plugins
  nymea-app:
    plugin: qmake
    source: https://github.com/guh/nymea-app.git
    source-type: git
    source-branch: master
    after: [desktop-qt5]
    project-files: [ nymea-app.pro ]
#    options: [ CONFIG+=withavahi ]
    build-packages:
      - qt5-default
      - qt5-qmake
      - qtbase5-dev
      - libavahi-client-dev
      - libavahi-common-dev
      - libqt5svg5-dev
      - libqt5websockets5-dev
      - qtconnectivity5-dev
      - qtdeclarative5-dev
      - qtquickcontrols2-5-dev
      - qttools5-dev-tools
    stage-packages:
      - libqt5bluetooth5
      - libqt5nfc5
      - libqt5gui5
      - libqt5websockets5
      - libgl1-mesa-dri
      - qml-module-qt-labs-folderlistmodel
      - qml-module-qt-labs-settings
      - qml-module-qtgraphicaleffects
      - qml-module-qtquick2
      - qml-module-qtquick-controls2
      - qml-module-qtquick-layouts
      - qml-module-qtquick-window2
      - libavahi-client3
      - libavahi-common3
      - qtvirtualkeyboard-plugin
    override-build: |
      snapcraftctl set-version $( git describe --tags )
      snapcraftctl build

  qt5-launch:
    plugin: dump
    source: .
    organize:
      qt5-launch: bin/
